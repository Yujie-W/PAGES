var documenterSearchIndex = {"docs":
[{"location":"#ResearchProjects","page":"Home","title":"ResearchProjects","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Yujie's collection of projects","category":"page"},{"location":"#","page":"Home","title":"2020","text":"","category":"section"},{"location":"#Project-LeafInvestment2020","page":"Home","title":"Project LeafInvestment2020","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The main barrier for implementing optimization based models into larger scale     land surface models is the diffuculties in parameterization. For example,     leaf area and photosynthetic capacity are highly plastic and may change     with the environment and time. However, the fact that optimization models     are based on plant traits make it possible to calculate the optimal leaf     investment from known environmental conditions and other plant traits such     as vulnerability curves. In this project, we explore how optimal leaf     investment in leaf area and photosynthetic capacity may be impacted by the     environmental conditions and other putatively more species-specific traits.     We test the sensitivity of optimal leaf investment to these variables and     identify the most important traits. We also show that the typically     difficult to measure metabolism-related leaf construction costs can be     inverted from known plant traits and the environment the plants are     acclimated to. See project pages for more details about the model and the     results.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The writing project is hosted using email exchanges, and the code is hosted at     Github.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Date Activity\nApr/06/2020 First submission to Global Change Biology\nJun/05/2020 Rejection from Global Change Biology\nJun/29/2020 Detect an error in sun/shade partition\nJul/05/2020 Rerun the code by fixing partitioning bug\nJul/15/2020 First submission to New Phytologist\nSep/28/2020 Move code to ResearchProjects\nOct/06/2020 Rerun the code with better default traits\nOct/21/2020 Resubmit to New Phytologist\n ","category":"page"},{"location":"#Project-NocturnalGS2020","page":"Home","title":"Project NocturnalGS2020","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Nocturnal transpiration is observed in many species and biomass, but currently     there is not yet a good model about why plants use water at night and why     the nighttime stomatal conductance responds to the environment. In this     project, we proposed that plants control nighttime stomatal conductance to     balance the nighttime benefits and the potential daytime benefits if the     water is used during the day. We further tested the model with water birch     samplings grown in a greenhouse. Our model predicted all the observed     responses. See the Project pages for more details about the results.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The writing project is hosted at Overleaf, and the code project is hosted at     Github. History of the project:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Date Activity\nOct/19/2020 Finish plotting the figures\nOct/22/2020 First submission\n ","category":"page"},{"location":"API/#API","page":"API","title":"API","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = ResearchProjects","category":"page"},{"location":"API/#Projects","page":"API","title":"Projects","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AbstractProject\nClumpingFactor2020\nFluxTower2020\nGriddingMachine2020\nLeafInvestment2020\nLeafInvestment2021\nNocturnalGS2020\nOptimalGM2020\nSIFComparison2020","category":"page"},{"location":"API/#ResearchProjects.AbstractProject","page":"API","title":"ResearchProjects.AbstractProject","text":"abstract type AbstractProject{FT}\n\nHierarchy of AbstractProject:\n\nClumpingFactor2020\nFluxTower2020\nGriddingMachine2020\nLeafInvestment2020\nLeafInvestment2021\nNocturnalGS2020\nOptimalGM2020\nSIFComparison2020\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.ClumpingFactor2020","page":"API","title":"ResearchProjects.ClumpingFactor2020","text":"struct ClumpingFactor2020{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.FluxTower2020","page":"API","title":"ResearchProjects.FluxTower2020","text":"struct FluxTower2020{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.GriddingMachine2020","page":"API","title":"ResearchProjects.GriddingMachine2020","text":"struct GriddingMachine2020{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.LeafInvestment2020","page":"API","title":"ResearchProjects.LeafInvestment2020","text":"struct LeafInvestment2020{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.LeafInvestment2021","page":"API","title":"ResearchProjects.LeafInvestment2021","text":"struct LeafInvestment2021{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.NocturnalGS2020","page":"API","title":"ResearchProjects.NocturnalGS2020","text":"struct NocturnalGS2020{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.OptimalGM2020","page":"API","title":"ResearchProjects.OptimalGM2020","text":"struct OptimalGM2020{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.SIFComparison2020","page":"API","title":"ResearchProjects.SIFComparison2020","text":"struct SIFComparison2020{FT}\n\n\n\n\n\n","category":"type"},{"location":"API/#General-functions","page":"API","title":"General functions","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"create_spac\ndynamic_workers","category":"page"},{"location":"API/#ResearchProjects.create_spac","page":"API","title":"ResearchProjects.create_spac","text":"create_spac(proj::FluxTower2020{FT},\n            sm::AbstractStomatalModel) where {FT<:AbstractFloat}\ncreate_spac(proj::LeafInvestment2020{FT},\n            lat::FT,\n            ele::FT;\n            spp::String) where {FT<:AbstractFloat}\ncreate_spac(proj::LeafInvestment2020{FT},\n            df::DataFrame,\n            lat::FT,\n            ele::FT;\n            spp::String\n            gmax::FT) where {FT<:AbstractFloat}\n\nCreate SPACSimple or SPACMono struct , given\n\nproj LeafInvestment2020 or FluxTower2020 type project\nsm AbstractStomatalModel type stomatal model. Default is OSMWang\nlat Latitude. Optional, default at Flagstaff\nele Elevation. Optional, default at Flagstaff\nspp AbstractSpecies type identifier. Optional, default is \"aspen\"\ndf Preloaded dataframe\ngmax Maximal stomatal conductance. Optional, default is 0.1\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.dynamic_workers","page":"API","title":"ResearchProjects.dynamic_workers","text":"dynamic_workers(nTH::Int)\ndynamic_workers(project::FluxTower2020{FT},\n                nTH::Int) where {FT<:AbstractFloat}\ndynamic_workers(project::LeafInvestment2020{FT},\n                nTH::Int) where {FT<:AbstractFloat}\n\nChange the number of workers according to CPU_THREADS, given\n\nnTH Number of thread required\nproject FluxTower2020 or LeafInvestment2020 type   project identifier\n\n\n\n\n\n","category":"function"},{"location":"API/#Species-indentifier","page":"API","title":"Species indentifier","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AbstractSpecies\nNiwotRidgeWang2020\nPopulusTremuloidesSperry2019","category":"page"},{"location":"API/#ResearchProjects.AbstractSpecies","page":"API","title":"ResearchProjects.AbstractSpecies","text":"abstract type AbstractSpecies\n\nHierarchy of AbstractSpecies\n\nPopulusTremuloidesSperry2019\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.NiwotRidgeWang2020","page":"API","title":"ResearchProjects.NiwotRidgeWang2020","text":"struct NiwotRidgeWang2020\n\n\n\n\n\n","category":"type"},{"location":"API/#ResearchProjects.PopulusTremuloidesSperry2019","page":"API","title":"ResearchProjects.PopulusTremuloidesSperry2019","text":"struct PopulusTremuloidesSperry2019\n\nData from Sperry et al., (2019). The impact of rising CO2 and acclimation on     the response of US forests to global warming.\n\n\n\n\n\n","category":"type"},{"location":"API/#Ptoject-ClumpingIndex2020","page":"API","title":"Ptoject ClumpingIndex2020","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"fit_leafbio\nspectrum_diff!","category":"page"},{"location":"API/#ResearchProjects.fit_leafbio","page":"API","title":"ResearchProjects.fit_leafbio","text":"fit_leafbio(proj::ClumpingFactor2020{FT},\n            refs::Array{FT,1},\n            use_latex::Bool) where {FT<:AbstractFloat}\n\nFit leaf bio parameters to match given spectrum data, given\n\nproj ClumpingFactor2020 type project control\nrefs Array of reference spectrum data\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.spectrum_diff!","page":"API","title":"ResearchProjects.spectrum_diff!","text":"spectrum_diff!(\n            proj::ClumpingFactor2020{FT},\n            wls::WaveLengths{FT},\n            leaf::LeafBios{FT},\n            vars::Array{FT,1},\n            refs::Array{FT,1},\n            sims::Array{FT,1}) where {FT<:AbstractFloat}\n\nCalculate the sum of square of difference between providing spectrum values and     simulated spectrum values, given\n\nproj ClumpingFactor2020 type project control\nwls WaveLengths type struct from CanopyLayers module\nleaf LeafBio type struct from CanopyLayers module\nvars Array of variables to fit\nrefs Array of reference spectrum data\nsims Array of simulated spectrum data (updated within function)\n\n\n\n\n\n","category":"function"},{"location":"API/#Project-FluxTower2020","page":"API","title":"Project FluxTower2020","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"calculate_fitting_density\ndiurnal_simulation!\ndoy_to_int\nfit_flux_tower_data\nfit_vr!\nfit_vrg!\nfit_vrgg!\nfit_vrggg!\nplot_density_scatter\nplot_fitted_variable\nplot_model_example\nprint_stats_table\nquery_dataframe\nupdate_gsw!","category":"page"},{"location":"API/#ResearchProjects.calculate_fitting_density","page":"API","title":"ResearchProjects.calculate_fitting_density","text":"calculate_fitting_density(\n            proj::FluxTower2020{FT};\n            nTH::Int = 20,\n            fitGmax::Bool = true,\n            perday::Bool = true\n) where {FT<:AbstractFloat}\n\nCalculate the scatter density of fitted simulations, given\n\nproj FluxTower2020 type project identifier\nnTH Number of threads to run the code in parallel\nfitGmax If true, Gmax has been fitted\nperday Optional. If true, seperate the data per day\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.diurnal_simulation!","page":"API","title":"ResearchProjects.diurnal_simulation!","text":"diurnal_simulation!(\n            proj::FluxTower2020{FT},\n            node::SPACMono{FT},\n            df::DataFrame,\n            rbase::Q10TD) where {FT<:AbstractFloat}\n\nRun diurnal cycle of land model simulation, given\n\nproj FluxTower2020 type project identifier\nnode SPACMono type struct from SoilPlantAirContinuum module\ndf Dataframe of weather data. Note that simulated data are stored in df.\nrbase Q10 based temperature dependency struct\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.doy_to_int","page":"API","title":"ResearchProjects.doy_to_int","text":"doy_to_int(year::Int, doy::Int)\n\nConvert date to int number to work with flux tower datasets, given\n\nyear Year with the format of XXXX\ndoy Day of year (typically 1-365, 1-366 for leap years)\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.fit_flux_tower_data","page":"API","title":"ResearchProjects.fit_flux_tower_data","text":"fit_flux_tower_data(\n            proj::FluxTower2020{FT},\n            params::Array,\n            label::String;\n            nTH::Int = 18,\n            fitGmax::Bool = true\n) where {FT<:AbstractFloat}\nfit_flux_tower_data(\n            proj::FluxTower2020{FT},\n            sm::ESMBallBerry{FT},\n            params::Array,\n            label::String;\n            nTH::Int = 18,\n            fitGmax::Bool = true\n) where {FT<:AbstractFloat}\nfit_flux_tower_data(\n            proj::FluxTower2020{FT},\n            sm::ESMMedlyn{FT},\n            params::Array,\n            label::String;\n            nTH::Int = 18,\n            fitGmax::Bool = true\n) where {FT<:AbstractFloat}\nfit_flux_tower_data(\n            proj::FluxTower2020{FT};\n            nTH::Int = 18,\n            fitGmax::Bool = true,\n            perday::Bool = true\n) where {FT<:AbstractFloat}\n\nFit Vcmax, Rbase, Gmin, and Gmax (and g0 and g1 as well if sm is given), given\n\nproj FluxTower2020 type project identifier\nparams Array of parameters to pass into threadings\nnTH How many threads to run the code in parallel\nfitGmax If true, fit Gmax as well\nsm ESMBallBerry or ESMMedlyn type stomatal model\nperday Optional. If true, seperate the data per day\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.fit_vr!","page":"API","title":"ResearchProjects.fit_vr!","text":"fit_vr!(param::Array)\n\nFit Vcmax and Rbase, given\n\nparam An array of parameters to pass into threaded workers, the param   consists of project identifier, SPACMono type struct, dataframe to   operate, floating number type, year identifier, and doy identifier\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.fit_vrg!","page":"API","title":"ResearchProjects.fit_vrg!","text":"fit_vrg!(param::Array)\n\nFit Vcmax, Rbase, and Gmax, given\n\nparam An array of parameters to pass into threaded workers, the param   consists of project identifier, SPACMono type struct, dataframe to   operate, floating number type, year identifier, and doy identifier\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.fit_vrgg!","page":"API","title":"ResearchProjects.fit_vrgg!","text":"fit_vrgg!(param::Array)\n\nFit Vcmax, Rbase, g0, and g1 (for Ball Berry Model), given\n\nparam An array of parameters to pass into threaded workers, the param   consists of project identifier, SPACMono type struct, dataframe to   operate, floating number type, year identifier, and doy identifier\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.fit_vrggg!","page":"API","title":"ResearchProjects.fit_vrggg!","text":"fit_vrggg!(param::Array)\n\nFit Vcmax, Rbase, and Gmax, g0 and g1 (for Ball Berry Model), given\n\nparam An array of parameters to pass into threaded workers, the param   consists of project identifier, SPACMono type struct, dataframe to   operate, floating number type, year identifier, and doy identifier\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_density_scatter","page":"API","title":"ResearchProjects.plot_density_scatter","text":"plot_density_scatter(\n            proj::FluxTower2020{FT};\n            saving::Bool,\n            use_latex::Bool,\n            fitGmax::Bool = true,\n            perday::Bool = true\n) where {FT<:AbstractFloat}\n\nPlot the density scatter of modeled fluxes vs. observed data, given\n\nproj FluxTower2020 type project identifier\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\nfitGmax If true, Gmax has been fitted\nperday Optional. If true, seperate the data per day\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_fitted_variable","page":"API","title":"ResearchProjects.plot_fitted_variable","text":"plot_fitted_variable(\n            proj::FluxTower2020{FT},\n            varname::String,\n            figname::String,\n            colors::Array{String,1} = [\"lightgray\", \"darkred\", \"salmon\"],\n            nday::Int=5;\n            saving::Bool = false,\n            use_latex::Bool = true,\n            vrggg::Bool = false,\n            fitGmax::Bool = true,\n            perday::Bool = true\n) where {FT<:AbstractFloat}\nplot_fitted_variable(\n            proj::FluxTower2020{FT},\n            nday::Int=5;\n            saving::Bool = false,\n            use_latex::Bool = true,\n            fitGmax::Bool = true\n) where {FT<:AbstractFloat}\n\nPlot fitted variables, given\n\nproj FluxTower2020 type project identifier\nvarname Variable name to plot\nfigname Figure name that display on window title bar\ncolors Colors for plots: individual point, mean, mean ± sd\nnday Number of days to calculate running average\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\nvrggg If true, use the version that fitted g0 and g1\nfitGmax If true, Gmax has been fitted\nperday Optional. If true, seperate the data per day\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_model_example","page":"API","title":"ResearchProjects.plot_model_example","text":"plot_model_example(\n            proj::FluxTower2020{FT};\n            saving::Bool = false,\n            use_latex::Bool = true,\n            fitGmax::Bool = true,\n            perday::Bool = true\n) where {FT<:AbstractFloat}\n\nPlot examples of modeled fluxes vs. observed data, given\n\nproj FluxTower2020 type project identifier\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\nfitGmax If true, Gmax has been fitted\nperday Optional. If true, seperate the data per day\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.print_stats_table","page":"API","title":"ResearchProjects.print_stats_table","text":"print_stats_table(\n            proj::FluxTower2020{FT};\n            saving::Bool = false,\n            perday::Bool = true\n) where {FT<:AbstractFloat}\n\nCalculate the statistics of the simulations, given\n\nproj FluxTower2020 type project identifier\nsaving Optional. If true, save the table to a CSV file\nperday Optional. If true, seperate the data per day\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.query_dataframe","page":"API","title":"ResearchProjects.query_dataframe","text":"query_dataframe(\n            proj::FluxTower2020{FT},\n            year::Int\n) where {FT<:AbstractFloat}\nquery_dataframe(\n            proj::FluxTower2020{FT},\n            data::DataFrame,\n            year::Int,\n            doy::Int\n) where {FT<:AbstractFloat}\nquery_dataframe(\n            proj::FluxTower2020{FT},\n            year::Int,\n            doy::Int\n) where {FT<:AbstractFloat}\nquery_dataframe(\n            proj::FluxTower2020{FT},\n            years::Array{Int,1} = [2019],\n            sm::AbstractStomatalModel = OSMWang{FT}();\n            perday::Bool = true\n) where {FT<:AbstractFloat}\n\nQuery DataFrame formated data, given\n\nproj FluxTower2020 type project identifier\nyear Which year of data to query\ndata DataFrame of data\ndoy Which day of data to query\nyears Array of years\nsm Pre-defined stomatal model\nperday Optional. If true, seperate the data per day\n\nNote that if year and doy are provided, the function returns a dataframe     with data from flux tower dataset, as well as new generated columns,     including ModC and MODE used to store values from land model simulation. If     years and sm are provided, the function returns an array of data to     pass to threading functions.\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.update_gsw!","page":"API","title":"ResearchProjects.update_gsw!","text":"update_gsw!(clayer::CanopyLayer{FT},\n            sm::AbstractStomatalModel{FT},\n            photo_set::AbstractPhotoModelParaSet{FT},\n            envir::AirLayer{FT},\n            Δt::FT) where {FT<:AbstractFloat}\n\nUpdate g_sw prognostically, given\n\nclayer A canoy layer –- CanopyLayer type struct\nsm AbstractStomatalModel type stomatal model\nphoto_set AbstractPhotoModelParaSet type photosynthesis model\nenvir AirLayer type environmental conditions\nΔt Time interval for prognostic stomatal conductance\n\n\n\n\n\n","category":"function"},{"location":"API/#Ptoject-GriddingMachine2020","page":"API","title":"Ptoject GriddingMachine2020","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"compare_datasets","category":"page"},{"location":"API/#ResearchProjects.compare_datasets","page":"API","title":"ResearchProjects.compare_datasets","text":"compare_datasets(proj::GriddingMachine2020{FT};\n            saving::Bool=false,\n            use_latex::Bool=true\n) where {FT<:AbstractFloat}\n\nCompare the inconsistency among datasets, given\n\nproj GriddingMachine2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#Project-LeafInvestment2020","page":"API","title":"Project LeafInvestment2020","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"fit_invest_cn\nget_optima_for_invest\nleaf_diff\nmean_LVGC\nplot_a2gs_ci2ca_comparison\nplot_annual_simulation\nplot_invest_cn_contour_example\nplot_laba_vmax_combo\nplot_leaf_optimum_example\nplot_sa_on_axes\nplot_sensitivity_analysis\nplot_sensitivity_analysis_si\nplot_sensitivity_bar\nplot_sun_shade_optimum\nrun_invest_cn_contour_example\nrun_sensitivity_analysis\nrun_sensitivity_analysis_gmax","category":"page"},{"location":"API/#ResearchProjects.fit_invest_cn","page":"API","title":"ResearchProjects.fit_invest_cn","text":"\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.get_optima_for_invest","page":"API","title":"ResearchProjects.get_optima_for_invest","text":"get_optima_for_invest(param::Array)\n\nLocal function to optimize leaf investment in multiple threading manner, given\n\nparam Array of parameters include the following (for sensitivity analayis)\nsite name\nsensitivity analysis variable\nsensitivity analysis variable ratio\nweather year\nSPACSimple struct from the SPAC module\nAbstractPhotoModelParaSet struct from the Photosynthesis module\nWeather data as a 2D array\nparam Array of parameters include the following (for invest_cn contour)\nprogress percentage\ninvest_c\ninvest_n\nSPACSimple struct from the SPAC module\nAbstractPhotoModelParaSet struct from the Photosynthesis module\nWeather data as a 2D array\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.leaf_diff","page":"API","title":"ResearchProjects.leaf_diff","text":"\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.mean_LVGC","page":"API","title":"ResearchProjects.mean_LVGC","text":"mean_LVGC(\n            project::LeafInvestment2020{FT},\n            data::DataFrame,\n            site::String,\n            lab::String,\n            ratios::Array{FT,1},\n            use_laba::Bool\n) where {FT<:AbstractFloat}\n\nCalculate and return array of mean LAGA, VMAX, GSCP, and CICA at different     trait settings, given\n\nproject LeafInvestment2020 type project\ndata DataFrame that contains data of sensitivity analysis\nsite Which site to filter\nlab Sensitivity to which variable\nratios Array of values for how much does the variable vary from default\nuse_laba Optional. If true use LABA, else use LAGA\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_a2gs_ci2ca_comparison","page":"API","title":"ResearchProjects.plot_a2gs_ci2ca_comparison","text":"plot_a2gs_ci2ca_comparison(\n            project::LeafInvestment2020{FT};\n            saving::Bool=false\n) where {FT<:AbstractFloat}\n\nPlot the comparison of A/Gs and Ci/Ca variation to reply the reviewer's     question, given\n\nproject LeafInvestment2020 type of project\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_annual_simulation","page":"API","title":"ResearchProjects.plot_annual_simulation","text":"plot_annual_simulation(\n            project::LeafInvestment2020{FT};\n            saving::Bool,\n            use_latex::Bool\n) where {FT<:AbstractFloat}\n\nPlot annual simulation, given\n\nproject LeafInvestment2020 type project\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_invest_cn_contour_example","page":"API","title":"ResearchProjects.plot_invest_cn_contour_example","text":"plot_invest_cn_contour_example(\n            project::LeafInvestment2020{FT};\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nPlot the investment map contour to fit investC and investN, given\n\nproject LeafInvestment2020 type of project\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_laba_vmax_combo","page":"API","title":"ResearchProjects.plot_laba_vmax_combo","text":"plot_laba_vmax_combo(\n            project::LeafInvestment2020{FT};\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nSort and plot the relative sensitivitiesy to xylem hydraulics, leaf, water     supply, and air, given\n\nproject LeafInvestment2020 type project\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_leaf_optimum_example","page":"API","title":"ResearchProjects.plot_leaf_optimum_example","text":"plot_leaf_optimum_example(\n            project::LeafInvestment2020{FT};\n            laba_list::Array{FT,1},\n            vmax_list::Array{FT,1},\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nPlot annual profit at different leaf investment, given\n\nproject LeafInvestment2020 type project\nlaba_list Given array of LA:BA to grid\nvmax_list Given array of Vcmax to grid\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_sa_on_axes","page":"API","title":"ResearchProjects.plot_sa_on_axes","text":"plot_sa_on_axes(\n            project::LeafInvestment2020{FT},\n            _axes::Array,\n            labs::Array{String,1},\n            rats::Array{Array{FT,1},1},\n            nrow::Int;\n            high_gmax::Bool,\n            use_laba::Bool\n) where {FT<:AbstractFloat}\n\nPlot sensitivity analysis on axes, given\n\nproject LeafInvestment2020 type project\n_axes Array of axes to plot on\nlabs Sensitivity to which variables\nrat Array of array of ratios\nnrow Row count of the figure\nhigh_gmax Optional. If true, plot the case of high base gmax\nuse_laba Optional. If true use LABA, else use LAGA\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_sensitivity_analysis","page":"API","title":"ResearchProjects.plot_sensitivity_analysis","text":"plot_sensitivity_analysis(\n            project::LeafInvestment2020{FT};\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nPlot the sensitivity to xylem hydraulics, leaf, water supply, and air, given\n\nproject LeafInvestment2020 type project\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_sensitivity_analysis_si","page":"API","title":"ResearchProjects.plot_sensitivity_analysis_si","text":"plot_sensitivity_analysis_si(\n            project::LeafInvestment2020{FT};\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nPlot the sensitivity to gmax at high gmax, given\n\nproject LeafInvestment2020 type project\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_sensitivity_bar","page":"API","title":"ResearchProjects.plot_sensitivity_bar","text":"plot_sensitivity_bar(\n            project::LeafInvestment2020{FT};\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nSort and plot the relative sensitivitiesy to xylem hydraulics, leaf, water     supply, and air, given\n\nproject LeafInvestment2020 type project\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_sun_shade_optimum","page":"API","title":"ResearchProjects.plot_sun_shade_optimum","text":"plot_sun_shade_optimum(\n            project::LeafInvestment2020{FT};\n            zenith::FT,\n            rall::FT,\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot the 3D contour of optimizer at different sunlit and shaded flow rates,     given\n\nproject LeafInvestment2020 type of project\nzenith Given zenith angle (optional)\nrall Given total radiation (optional)\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.run_invest_cn_contour_example","page":"API","title":"ResearchProjects.run_invest_cn_contour_example","text":"run_invest_cn_contour_example(\n            project::LeafInvestment2020{FT},\n            nTH::Int,\n            array_c::Array{FT,1},\n            array_n::Array{FT,1}\n) where {FT<:AbstractFloat}\n\nGenerate investment map data in multiple threading manner, given\n\nproject LeafInvestment2020 type of project\nnTH Number of threadings to run the simulation\narray_c Given array of investC\narray_n Given array of investN\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.run_sensitivity_analysis","page":"API","title":"ResearchProjects.run_sensitivity_analysis","text":"run_sensitivity_analysis(\n            project::LeafInvestment2020{FT};\n            nTH::Int,\n            siteids::Array{Int,1},\n            selection::Array{String,1}\n) where {FT<:AbstractFloat}\n\nRun sensitivity analysis for optimal leaf investment, given\n\nproject LeafInvestment2020 type project\nnTH Number of threads\nsiteids Indices of selected sites\nselection List of parameters to do sensitivity on\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.run_sensitivity_analysis_gmax","page":"API","title":"ResearchProjects.run_sensitivity_analysis_gmax","text":"run_sensitivity_analysis(\n            project::LeafInvestment2020{FT};\n            nTH::Int,\n            siteids::Array{Int,1},\n            selection::Array{String,1}\n) where {FT<:AbstractFloat}\n\nRun sensitivity analysis for optimal leaf investment, given\n\nproject LeafInvestment2020 type project\nnTH Number of threads\nsiteids Indices of selected sites\nselection List of parameters to do sensitivity on\n\n\n\n\n\n","category":"function"},{"location":"API/#Project-NocturnalGS2020","page":"API","title":"Project NocturnalGS2020","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"plot_framework\nplot_gswn_vs_pcd\nplot_gswn_vs_r\nplot_gswn_vs_tem\nplot_gswn_vs_time\nplot_gswn_vpd\ncalculate_dAdE!\ncalculate_dRdE\nfitness_factor","category":"page"},{"location":"API/#ResearchProjects.plot_framework","page":"API","title":"ResearchProjects.plot_framework","text":"plot_framework(\n            project::NocturnalGS2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot model framework, given\n\nproject NocturnalGS2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_gswn_vs_pcd","page":"API","title":"ResearchProjects.plot_gswn_vs_pcd","text":"plot_gswn_vs_pcd(\n            project::NocturnalGS2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot gswn vs Psoil, Ca, and D, given\n\nproject NocturnalGS2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_gswn_vs_r","page":"API","title":"ResearchProjects.plot_gswn_vs_r","text":"plot_gswn_vs_r(\n            project::NocturnalGS2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot gswn vs leaf respiration rate, given\n\nproject NocturnalGS2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_gswn_vs_tem","page":"API","title":"ResearchProjects.plot_gswn_vs_tem","text":"plot_gswn_vs_tem(\n            project::NocturnalGS2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot gswn vs temperature, given\n\nproject NocturnalGS2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_gswn_vs_time","page":"API","title":"ResearchProjects.plot_gswn_vs_time","text":"plot_gswn_vs_time(\n            project::NocturnalGS2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot gswn vs time, given\n\nproject NocturnalGS2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_gswn_vpd","page":"API","title":"ResearchProjects.plot_gswn_vpd","text":"plot_gswn_vpd(\n            project::NocturnalGS2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot gswn vs VPD, given\n\nproject NocturnalGS2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.calculate_dAdE!","page":"API","title":"ResearchProjects.calculate_dAdE!","text":"calculate_dAdE!(\n            leaf::Leaf{FT},\n            env::AirLayer{FT},\n            psm::AbstractPhotoModelParaSet{FT},\n            a_n::FT,\n            c_a::FT,\n            e_leaf::FT,\n            gbw::FT,\n            p_atm::FT,\n            par::FT,\n            t_leaf::FT,\n            vp_air::FT,\n            dTdE::Bool\n) where {FT<:AbstractFloat}\n\nCalculate the marginal water use efficiency by firstly fitting the     photosynthetic capacity and secondly numerically computing dAdE, given\n\nleaf Leaf type struct that stores leaf photosynthetic parameters\nenv AirLayer type struct that stores environmental conditions\npsm AbstractPhotoModelParaSet type struct that stores photosynthesis   model parameters, like the temperature dependencies\na_n Given net photosynthetic rate\nc_a Given CO₂ concentration in ppm\ne_leaf Given leaf transpiration rate\ngbw Given leaf boundary layer conductance for H₂O\np_atm Given atmospheric pressure\npar Given photosynthetically active radiation\nt_leaf Given leaf temperature\nvp_air Given vapor pressure in the air\ndTdE::Bool If true, account for leaf cooling from transpiration\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.calculate_dRdE","page":"API","title":"ResearchProjects.calculate_dRdE","text":"calculate_dRdE(\n            psm::AbstractPhotoModelParaSet{FT},\n            r_n::FT,\n            t_leaf::FT,\n            wind::FT\n) where {FT<:AbstractFloat}\n\nCalculate marginal respiratory reduction, given\n\npsm AbstractPhotoModelParaSet type struct that stores photosynthesis   model parameters, like the temperature dependencies\nr_n Given leaf respiration rate\nt_leaf Given leaf temperature\nwind Given wind speed\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.fitness_factor","page":"API","title":"ResearchProjects.fitness_factor","text":"fitness_factor(\n            project::NocturnalGS2020{FT};\n            dTdE::Bool,\n            display_result::Bool\n) where {FT<:AbstractFloat}\n\nCalculate the mean and standard deviation of the fitness factors, given\n\nproject NocturnalGS2020 type project control\ndTdE Whether accounting for leaf cooling effect for daytime photosynthesis\ndisplay_result Optional. If true, display the results\n\n\n\n\n\n","category":"function"},{"location":"API/#Project-OptimalGM2020","page":"API","title":"Project OptimalGM2020","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"a_cc_vs_gm\na_vs_cc\noptimal_gm\noptimal_gss_gms\nplot_data_fittings\nplot_gm_prediction\nplot_gm_var_maps\nplot_optimal_gm_framework\nplot_optimal_gm_predictions\nplot_optimal_gm_vs_ca\nplot_optimal_gm_vs_gs\nplot_optimal_gm_vs_par\n∂A∂Gm","category":"page"},{"location":"API/#ResearchProjects.a_cc_vs_gm","page":"API","title":"ResearchProjects.a_cc_vs_gm","text":"a_cc_vs_gm(psm::AbstractPhotoModelParaSet{FT},\n           leaf::Leaf{FT},\n           env::AirLayer{FT};\n           gsc::FT) where {FT<:AbstractFloat}\n\nCalculate chloroplast CO₂ and net photosynthetic rate at different mesophyll     conductance, given\n\npsm Photosynthesis model parameter set from Photosynthesis module\nleaf Leaf struct from Photosynthesis module\nenv AirLayer struct from Photosynthesis module\ngsc Stomatal conductance to CO₂ (default at 0.2)\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.a_vs_cc","page":"API","title":"ResearchProjects.a_vs_cc","text":"a_vs_cc(psm::AbstractPhotoModelParaSet{FT},\n        leaf::Leaf{FT},\n        env::AirLayer{FT};\n        ccs::Array{FT,1}) where {FT<:AbstractFloat}\n\nCalculate net photosynthetic rate at different chloroplast CO₂, given\n\npsm Photosynthesis model parameter set from Photosynthesis module\nleaf Leaf struct from Photosynthesis module\nenv AirLayer struct from Photosynthesis module\nccs Chloroplast CO₂ partial pressure array (default from 5 to 45 Pa)\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.optimal_gm","page":"API","title":"ResearchProjects.optimal_gm","text":"optimal_gm(proj::OptimalGM2020{FT},\n           psm::AbstractPhotoModelParaSet{FT},\n           canopyi::CanopyLayer{FT},\n           hs::LeafHydraulics{FT},\n           env::AirLayer{FT},\n           sm::OSMWang{FT},\n           f_cost::FT) where {FT<:AbstractFloat}\n\nCalculate the optimal mesophyll conductance, given\n\nproj OptimalGM2020 type project control\npsm Photosynthesis model parameter set from Photosynthesis module\ncanopyi CanopyLayer type struct from StomataModels module\nhs LeafHydraulics type struct from PlantHydraulics module\nenv AirLayer type struct from Photosynthesis module\nsm OSMWang type stomatal model from StomataModels module\nf_cost Marginal cost in photosynthetic rate per marginal increase in   mesophyll conductance\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.optimal_gss_gms","page":"API","title":"ResearchProjects.optimal_gss_gms","text":"optimal_gss_gms(proj::OptimalGM2020{FT},\n                psm::AbstractPhotoModelParaSet{FT},\n                can::CanopyLayer{FT},\n                env::AirLayer{FT},\n                hs::LeafHydraulics{FT},\n                sm::OSMWang{FT},\n                lab::String) where {FT<:AbstractFloat}\n\nCalculate optimal stomatal and mesophyll conductance arrays, given\n\nproj OptimalGM2020 type project control\npsm Photosynthesis model parameter set from Photosynthesis module\nleaf Leaf struct from Photosynthesis module\nenv AirLayer struct from Photosynthesis module\nhs LeafHydraulics struct from PlantHydraulics module\nsm OSMWang type of stomatal model from StomataModels module\nlab Which variable to modify and run sensitivity analysis\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_data_fittings","page":"API","title":"ResearchProjects.plot_data_fittings","text":"plot_data_fittings(\n            proj::OptimalGM2020{FT};\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nPlot the model predictions and real data, given\n\nproj OptimalGM2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_gm_prediction","page":"API","title":"ResearchProjects.plot_gm_prediction","text":"plot_gm_prediction(proj::OptimalGM2020{FT},\n                   ax,\n                   lab::String;\n                   offset_x::FT,\n                   multip_y::FT,\n                   plot_gs::Bool,\n                   vcm::FT,\n                   jm::FT,\n                   gm_ls::String) where {FT<:AbstractFloat}\n\nPlot mesophyll conductance response on axis, given\n\nproj OptimalGM2020 type project control\nax Axis to plot on\nlab Identifier to run sensitivity analysis\noffset_x An offset on x-axis, e.g., to convert K to °C\nmultip_y A multiplier on y-axis\nplot_gs Optional. If true, plot stomatal conductance as well\nvcm Vcmax25 to compute leaf photosynthetic rate\njm Jmax25 to compute leaf photosynthetic rate\ngm_ls Line style to plot mesophyll conductance\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_gm_var_maps","page":"API","title":"ResearchProjects.plot_gm_var_maps","text":"plot_gm_var_maps(\n            proj::OptimalGM2020{FT};\n            saving::Bool = false\n) where {FT<:AbstractFloat}\n\nPlot the Ci-Gm and PAR-Gm contour map of ∂A/∂Gm, given\n\nproj OptimalGM2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_optimal_gm_framework","page":"API","title":"ResearchProjects.plot_optimal_gm_framework","text":"plot_optimal_gm_framework(\n            proj::OptimalGM2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot model framework, given\n\nproj OptimalGM2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_optimal_gm_predictions","page":"API","title":"ResearchProjects.plot_optimal_gm_predictions","text":"plot_optimal_gm_predictions(\n            proj::OptimalGM2020{FT};\n            saving::Bool = false) where {FT<:AbstractFloat}\n\nPlot model predictions of how optimal mesophyll respond to the environment,     given\n\nproj OptimalGM2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_optimal_gm_vs_ca","page":"API","title":"ResearchProjects.plot_optimal_gm_vs_ca","text":"plot_optimal_gm_vs_ca(\n            proj::OptimalGM2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot model framework, given\n\nproj OptimalGM2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_optimal_gm_vs_gs","page":"API","title":"ResearchProjects.plot_optimal_gm_vs_gs","text":"plot_optimal_gm_vs_gs(\n            proj::OptimalGM2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot model framework, given\n\nproj OptimalGM2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.plot_optimal_gm_vs_par","page":"API","title":"ResearchProjects.plot_optimal_gm_vs_par","text":"plot_optimal_gm_vs_par(\n            proj::OptimalGM2020{FT};\n            saving::Bool\n) where {FT<:AbstractFloat}\n\nPlot model framework, given\n\nproj OptimalGM2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"},{"location":"API/#ResearchProjects.∂A∂Gm","page":"API","title":"ResearchProjects.∂A∂Gm","text":"∂A∂Gm(proj::OptimalGM2020{FT},\n      psm::AbstractPhotoModelParaSet{FT},\n      leaf::Leaf{FT},\n      env::AirLayer{FT},\n      ci::FT,\n      gm::FT) where {FT<:AbstractFloat}\n\nCalculate the marginal photosynthetic gain per marginal increase in mesophyll     conductance, given\n\nproj OptimalGM2020 type project control\npsm Photosynthesis model parameter set from Photosynthesis module\nleaf Leaf type struct from Photosynthesis module\nenv AirLayer type struct from Photosynthesis module\nci Given leaf internal CO₂ in the intercellular airspace [Pa]\ngm Given mesophyll condutcance\n\n\n\n\n\n","category":"function"},{"location":"API/#SIFComparison2020","page":"API","title":"SIFComparison2020","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"derive_spectrum","category":"page"},{"location":"API/#ResearchProjects.derive_spectrum","page":"API","title":"ResearchProjects.derive_spectrum","text":"derive_spectrum(proj::SIFComparison2020{FT};\n                saving::Bool,\n                use_latex::Bool) where {FT<:AbstractFloat}\n\nDerive and plot the albedo and SIF spectrum, given\n\nproj SIFComparison2020 type project control\nsaving Optional. If true, save the figure\nuse_latex Optional. If true, use latex and serif font\n\n\n\n\n\n","category":"function"}]
}
